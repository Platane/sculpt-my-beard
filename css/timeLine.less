@import 'colorScheme.less';

.tl {


    /////////////
    ////// layout

    * {
        box-sizing: border-box;
    }
    user-select: none;

    width: 100%;
    display: flex;
    align-items: stretch;
    position: relative;

    // define the position of the left / right block
    .tl-left {
        width: 200px;
        flex-shrink: 0.1;
        flex-grow: 0;
        position: relative;
        order: 0;

    }
    .tl-right {
        width: 200px;
        flex-shrink: 1;
        flex-grow: 1;
        position: relative;
        order: 1;
    }

    // make the timeline responsive in height
    .tl-left,
    .tl-right {
        display: flex;
        flex-direction: column;
    }
    .tl-block-lines,  // the container of the five raw
    .tl-block-label {
        flex-grow: 5;
        display: flex;
        flex-direction: column;
    }
    .tl-row {    // the five row of the table
        flex-grow: 1;
        height: 36px;
    }
    .tl-global-label, // the top header of the table
    .tl-ruler {
        flex-grow: 1;
        height: 36px;
    }

    /////////////
    ////// style

    box-shadow: 2px -1px 10px 0px rgba(50, 50, 50, 0.4);

    .tl-block-label {

        box-shadow: 8px 0px 5px -5px rgba(50, 50, 50, 0.4);

        .tl-row {
            /*
            &:before {
                content: '';
                position: absolute;
                display: block;
                top: 2px;
                bottom: 2px;
                left: 0;
                right:5px;
                border-radius: 0 3px 3px 0;
            }*/

            .loop( @i ) when ( @i > 0 ) {
                .loop(( @i - 1 ));

                &:nth-child( @{i} ) {
                    /*
                    &:before{
                        background: linear-gradient(85deg,
                            fade( extract( @chunk-colors, @i ), 40% ),
                            fade( extract( @chunk-colors, @i ), 80% ) );
                    }*/
                    .tl-icon {
                        fill: extract( @chunk-colors, @i );
                    }

                }
            };
            .loop( length( @chunk-colors ) );
        }
    }
    .tl-block-lines {
        cursor: default;
        .tl-row {

            &:before {
                @line-width: 1px;
                content: '';
                position: absolute;
                display: block;
                top: calc( ~"50% - " @line-width/2 );
                height: @line-width;
                left: 0;
                right: 0;
                background-color: fade( @dark, 20% );
            }

            position: relative;
            .loop( @i ) when ( @i > 0 ) {
                .loop(( @i - 1 ));

                &:nth-child( @{i} ) {

                    .tl-key{
                        background: extract( @chunk-colors, @i );
                        background: linear-gradient(60deg,
                            lighten( extract( @chunk-colors, @i ), 18% ),
                            extract( @chunk-colors, @i ) );
                    }
                }
            };
            .loop( length( @chunk-colors ) );
        }
    }

    .tl-row {
        background-color: fade( @darkBack, 86% );
        background-color: rgba(255, 255, 255, 0.85);
        position: relative;
    }
    .tl-label {
        padding: 12px 8px 5px 40px;
        display: inline-block;
        z-index: 9;

        font-family: axis, helvetica;
        font-size: 14px;
        text-transform: uppercase;
        color: @dark;
    }
    .tl-icon {
        @size: 60%;
        position: absolute;
        left: 5px;
        top: calc( ~"50% - " @size / 2 );
        width: 30px;
        height: @size;
    }

    .tl-key {
        @size: 10px;
        position: absolute;
        width: @size;
        height: @size;
        transform: rotate(45deg);
        top: calc(~" 50% - " @size /2 );
    }

}
